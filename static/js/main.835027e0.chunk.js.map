{"version":3,"sources":["assets/explosion.svg","assets/spaceship.svg","assets/explosion.mp3","assets/ongoing.mp3","components/History/HistoryItem.js","components/History/History.js","components/Game/Screen.js","components/util_comps/Toggle.js","components/util_comps/NumInput.js","components/Panel/Panel.js","components/Game/Game.js","components/Sidebar/Sidebar.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HistoryItem","x","className","History","history","useState","expanded","setExpanded","onClick","map","item","i","key","Screen","coefficient","boom","timer","win","src","boomPic","ship","alt","style","width","toFixed","Toggle","value","onChange","disabled","rest","NumInput","label","symbol","name","type","Number","toString","e","target","Panel","autoBet","setAutoBet","autoOff","setAutoOff","info","setInfo","bet","setBet","setWin","coeficient","balanceChange","balance","onNumInputChange","val","persist","prevState","started","Game","push","boomSound","Audio","boomEffect","onGoingSound","onGoingEffect","setTimer","setCoefficient","setBoom","useEffect","setTimeout","play","chanceFrom","Math","floor","random","toAdd","interval","setInterval","pause","clearInterval","isInteger","increaseCoefficient","winAmount","Sidebar","Main","setBalance","setHistory","add","amount","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.835027e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/explosion.1cd76f4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.ccec3013.svg\";","module.exports = __webpack_public_path__ + \"static/media/explosion.bd1f6121.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ongoing.f51d25e5.mp3\";","import React from \"react\";\r\n\r\nexport const HistoryItem = ({ x }) => (\r\n  <div className={`history-item ${x >= 1.5 ? \"green\" : \"red\"}`}>\r\n    <span>{x}</span>\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { HistoryItem } from \"./HistoryItem\";\r\nimport \"../../styles/history.css\";\r\n\r\nexport const History = ({ history }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"history-button\" onClick={() => setExpanded(!expanded)}>\r\n        ისტორია\r\n      </div>\r\n      <div className={`history-list ${expanded ? \"list-expanded\" : \"\"}`}>\r\n        {history.map((item, i) => {\r\n          return <HistoryItem key={i} x={item} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport boomPic from \"../../assets/explosion.svg\";\r\nimport ship from \"../../assets/spaceship.svg\";\r\n\r\nexport const Screen = ({ coefficient, boom, timer, win }) => {\r\n  return (\r\n    <div\r\n      className={`screen-container ${\r\n        timer <= 0 && !boom ? \"screen-animated\" : \"\"\r\n      }`}\r\n    >\r\n      <div className={`ship-container ${timer <= 0 ? \"off\" : \"landing\"}`}>\r\n        {\" \"}\r\n        <img\r\n          src={boom ? boomPic : ship}\r\n          alt=\"space ship\"\r\n          className=\"spaceship-img\"\r\n        />\r\n        {timer > 0 ? (\r\n          <>\r\n            <h4 className=\"green\">{timer}</h4>\r\n            <div className=\"outside-loading\">\r\n              <div\r\n                className=\"loading-rail\"\r\n                style={{ width: `${100 - timer * 10}%` }}\r\n              ></div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n        {timer <= 0 ? (\r\n          <h2 className={boom ? \"red\" : \"green\"}>{coefficient.toFixed(2)}x</h2>\r\n        ) : null}\r\n      </div>\r\n      {win ? <h2 className=\"green top-center\">{win.toFixed(2)}₾</h2> : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../../styles/toggle.css\";\r\n\r\nexport const Toggle = ({\r\n  value,\r\n  onChange,\r\n  className = \"\",\r\n  disabled,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`outside-toggle ${className} ${value ? \"checked-toggle\" : \"\"} ${disabled ? 'dis-toggle': ''}`}\r\n      onClick={() => (disabled ? () => {} : onChange(!value))}\r\n      {...rest}\r\n    >\r\n      <div className=\"inside-toggle\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../../styles/numInput.css\";\r\n\r\nexport const NumInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  symbol,\r\n  name,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className=\"num-input-container\">\r\n      <span className=\"num-input-label\">{label}</span>\r\n      <div className=\"num-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={Number(value).toFixed(2).toString()}\r\n          name={name}\r\n          onChange={e => onChange(e, Number(e.target.value))}\r\n          {...rest}\r\n        />\r\n        <span>{symbol}</span>\r\n        <button onClick={e => onChange(e, Number(value) + 1)} name={name} disabled={disabled}>\r\n          +\r\n        </button>\r\n        <button onClick={e => onChange(e, Number(value) - 1)} name={name} disabled={disabled}>\r\n          -\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Toggle } from \"../util_comps/Toggle\";\r\nimport { NumInput } from \"../util_comps/NumInput\";\r\nimport \"../../styles/panel.css\";\r\n\r\nexport const Panel = ({\r\n  autoBet,\r\n  setAutoBet,\r\n  autoOff,\r\n  setAutoOff,\r\n  info,\r\n  setInfo,\r\n  bet,\r\n  timer,\r\n  setBet,\r\n  win,\r\n  setWin,\r\n  coeficient,\r\n  balanceChange,\r\n  balance\r\n}) => {\r\n  const onNumInputChange = (e, x) => {\r\n    e.persist();\r\n    let val;\r\n    if(x==='.00'){\r\n      val = x\r\n    }else{\r\n      val = Number(x)\r\n    }\r\n    setInfo(prevState => ({\r\n      ...prevState,\r\n      [e.target.name]: val.toFixed(2),\r\n    }));\r\n  };\r\n  // To know if game was started\r\n  const started = timer <= 0;\r\n  // Off click handlers\r\n  const onClick = () => {\r\n    // If user has made bet and the game is alreay started\r\n    if ((bet || autoBet) && started) {\r\n      balanceChange(true, coeficient * info.autoBet)\r\n      setWin(coeficient * info.autoBet);\r\n      // If user has made bet and the game is not started\r\n    } else if (!started && bet) {\r\n      setBet(false);\r\n      setAutoBet(false);\r\n      // If user has made autobet and the game is started\r\n    } else if (!started && autoBet) {\r\n      setAutoBet(false);\r\n      setBet(false);\r\n    } else {\r\n      setBet(true);\r\n    }\r\n  };\r\n  const buttonText = () => {\r\n    // If user has already won this round\r\n    if (win) {\r\n      return \"ფსონის განთავსება\";\r\n    }\r\n    // If user has made bet or has autoBet turned on\r\n    else if (bet || autoBet) {\r\n      // If current round is already started\r\n      if (started) {\r\n        return `განაღდება ${Number(coeficient * info.autoBet).toFixed(2)}₾`;\r\n      } else {\r\n        return `გაუქმება (${info.autoBet}₾)`;\r\n      }\r\n    }\r\n    // If current round is not started yet, user has not made a bet and has autoBet turned off\r\n    else if (!started && !bet && !autoBet) {\r\n      return \"ფსონის განთავსება\";\r\n    } else {\r\n      return \"ფსონის განთავსება\";\r\n    }\r\n  };\r\n  const disableHeler = () => {\r\n    // Simply if user has already won in current round\r\n    if(win){\r\n      return true\r\n    }\r\n    // If user doesn't have enought money on balance\r\n    if(info.autoBet > balance){\r\n      return true\r\n    }\r\n    // If current round is started and user has made no bets\r\n    else if(started && !bet && !autoBet){\r\n      return true\r\n    }\r\n    // If curent round is started and user has made any kind of bet\r\n    else if(started && bet){\r\n      return false\r\n    }else if(started && autoBet){\r\n      return false\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"panel-container\">\r\n      <div className=\"panel-dash\">\r\n        <div className=\"panel-part\">\r\n          <Toggle value={autoBet} onChange={setAutoBet} disabled={started}/>\r\n          <NumInput\r\n            symbol=\"₾\"\r\n            onChange={onNumInputChange}\r\n            name=\"autoBet\"\r\n            label=\"ფსონი\"\r\n            value={info.autoBet}\r\n            disabled={started}\r\n          />\r\n        </div>\r\n        <div className=\"panel-part\">\r\n          <Toggle value={autoOff} onChange={setAutoOff} disabled={started}/>\r\n          <NumInput\r\n            symbol=\"x\"\r\n            onChange={onNumInputChange}\r\n            name=\"autoOff\"\r\n            label=\"მოხსნა\"\r\n            value={info.autoOff}\r\n            disabled={started}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button\r\n        className={`bet-btn ${\r\n          bet || autoBet ? (started ? \"bet\" : \"cancel\") : \"\"\r\n        }`}\r\n        onClick={onClick}\r\n        disabled={disableHeler()}\r\n      >\r\n        {buttonText()}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Screen } from \"./Screen\";\r\nimport { Panel } from \"../Panel/Panel\";\r\nimport boomEffect from \"../../assets/explosion.mp3\";\r\nimport onGoingEffect from \"../../assets/ongoing.mp3\";\r\nimport \"../../styles/game.css\";\r\n\r\nexport const Game = ({ push, balance, balanceChange }) => {\r\n  const boomSound = new Audio(boomEffect);\r\n  const onGoingSound = new Audio(onGoingEffect);\r\n  const [timer, setTimer] = useState(10);\r\n  const [info, setInfo] = useState({ autoBet: 1.0, autoOff: 2.0 });\r\n  const [coefficient, setCoefficient] = useState(1);\r\n  const [boom, setBoom] = useState(false);\r\n  const [autoBet, setAutoBet] = useState(false);\r\n  const [autoOff, setAutoOff] = useState(false);\r\n  const [bet, setBet] = useState(false);\r\n  const [win, setWin] = useState(0);\r\n  // Function to increase coefficient\r\n  const increaseCoefficient = () => {\r\n    onGoingSound.play();\r\n    // In one out of 10 games, change will be increased\r\n    let chanceFrom = Math.floor(Math.random() * 10 === 3) ? 150 : 35;\r\n    let toAdd = 0;\r\n    const game = () => {\r\n      toAdd += 0.002;\r\n      setCoefficient(prevState => prevState + toAdd);\r\n      if (Math.floor(Math.random() * chanceFrom) === 3) {\r\n        boomSound.play();\r\n        onGoingSound.pause();\r\n        setBoom(true);\r\n        clearInterval(interval);\r\n      }\r\n      chanceFrom += Number.isInteger(coefficient / 10) ? coefficient / 10 : 0;\r\n    };\r\n    // Increase x in every 400 ms\r\n    const interval = setInterval(game, 400);\r\n  };\r\n  // Function to start countdown before flight\r\n  const startCountDown = timer => {\r\n    setTimeout(() => {\r\n      setTimer(prevState => prevState - 1);\r\n    }, 1000);\r\n  };\r\n  // Listen to timer and start when needed\r\n  useEffect(() => {\r\n    if (timer > 0) {\r\n      startCountDown(timer);\r\n    } else {\r\n      setCoefficient(1);\r\n      increaseCoefficient();\r\n    }\r\n  }, [timer]);\r\n  // Clear screen after explosion\r\n  useEffect(() => {\r\n    if (boom) {\r\n      setWin(0);\r\n      if (!autoBet) {\r\n        setBet(false);\r\n      }\r\n      push(coefficient.toFixed(2));\r\n      setTimeout(() => {\r\n        setTimer(10);\r\n        setBoom(false);\r\n        setCoefficient(1);\r\n      }, 3000);\r\n    }\r\n  }, [boom]);\r\n  // Drop money automatically when autoOff is gte coefficient\r\n  useEffect(() => {\r\n    if (autoOff && coefficient >= info.autoOff && !win) {\r\n      const winAmount = info.autoBet * info.autoOff;\r\n      balanceChange(true, winAmount)\r\n      setWin(winAmount);\r\n    }\r\n  }, [coefficient]);\r\n  // Discount balance on bet\r\n  useEffect(()=>{\r\n    if(timer<=0 && bet){\r\n      balanceChange(false, info.autoBet)\r\n    }else if(timer<=0 && autoBet){\r\n      balanceChange(false, info.autoBet)\r\n    }\r\n  },[bet, autoBet, timer])\r\n  return (\r\n    <div className=\"game-container\">\r\n      <Screen timer={timer} coefficient={coefficient} boom={boom} win={win} />\r\n      <Panel\r\n        autoBet={autoBet}\r\n        setAutoBet={setAutoBet}\r\n        autoOff={autoOff}\r\n        info={info}\r\n        setInfo={setInfo}\r\n        setAutoOff={setAutoOff}\r\n        bet={bet}\r\n        setBet={setBet}\r\n        timer={timer}\r\n        setWin={setWin}\r\n        win={win}\r\n        coeficient={coefficient}\r\n        balance={balance}\r\n        balanceChange={balanceChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../../styles/sidebar.css\";\r\n\r\nexport const Sidebar = ({ balance }) => {\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"sidebar-header\">\r\n        <h3>ბალანსი: {balance.toFixed(2)}₾</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { History } from \"../components/History/History\";\r\nimport { Game } from \"../components/Game/Game\";\r\nimport { Sidebar } from \"../components/Sidebar/Sidebar\";\r\nimport \"../styles/main.css\";\r\n\r\nconst Main = () => {\r\n  const [balance, setBalance] = useState(100);\r\n  const [history, setHistory] = useState([\r\n    1.3,\r\n    1.6,\r\n    12.54,\r\n    5.32,\r\n    1.12,\r\n    1.3,\r\n    1.6,\r\n    12.54,\r\n    5.32,\r\n    1.12,\r\n    1.3,\r\n    1.6,\r\n    12.54,\r\n    5.32,\r\n    1.12,\r\n    1.3,\r\n    1.6,\r\n    12.54,\r\n    5.32,\r\n    1.12,\r\n  ]);\r\n  // This function pushes new records to booming history\r\n  const push = x => {\r\n    setHistory(prevState => [x, ...prevState]);\r\n  };\r\n  // Function to manipulate balance\r\n  const balanceChange = (add, amount) => {\r\n    if (add) {\r\n      setBalance(prevState => prevState + amount);\r\n    } else {\r\n      setBalance(prevState => prevState - amount);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"main-container\">\r\n      <History history={history} />\r\n      <Game push={push} balance={balance} balanceChange={balanceChange} />\r\n      <Sidebar balance={balance} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}